// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_iterators_StringIterator
#include <haxe/iterators/StringIterator.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c6d547f8dc5a2e0b_31_new,"haxe.iterators.StringIterator","new",0x04de7dc2,"haxe.iterators.StringIterator.new","/opt/haxe/std/haxe/iterators/StringIterator.hx",31,0x1f4398b6)
HX_LOCAL_STACK_FRAME(_hx_pos_c6d547f8dc5a2e0b_46_hasNext,"haxe.iterators.StringIterator","hasNext",0xe970abcf,"haxe.iterators.StringIterator.hasNext","/opt/haxe/std/haxe/iterators/StringIterator.hx",46,0x1f4398b6)
HX_LOCAL_STACK_FRAME(_hx_pos_c6d547f8dc5a2e0b_53_next,"haxe.iterators.StringIterator","next",0x3dcf8d51,"haxe.iterators.StringIterator.next","/opt/haxe/std/haxe/iterators/StringIterator.hx",53,0x1f4398b6)
namespace haxe{
namespace iterators{

void StringIterator_obj::__construct(::String s){
            	HX_STACKFRAME(&_hx_pos_c6d547f8dc5a2e0b_31_new)
HXLINE(  32)		this->offset = 0;
HXLINE(  39)		this->s = s;
            	}

Dynamic StringIterator_obj::__CreateEmpty() { return new StringIterator_obj; }

void *StringIterator_obj::_hx_vtable = 0;

Dynamic StringIterator_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StringIterator_obj > _hx_result = new StringIterator_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool StringIterator_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x09645c0e;
}

bool StringIterator_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_c6d547f8dc5a2e0b_46_hasNext)
HXDLIN(  46)		return (this->offset < this->s.length);
            	}


HX_DEFINE_DYNAMIC_FUNC0(StringIterator_obj,hasNext,return )

int StringIterator_obj::next(){
            	HX_STACKFRAME(&_hx_pos_c6d547f8dc5a2e0b_53_next)
HXDLIN(  53)		return this->s.cca(this->offset++);
            	}


HX_DEFINE_DYNAMIC_FUNC0(StringIterator_obj,next,return )


StringIterator_obj::StringIterator_obj()
{
}

void StringIterator_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StringIterator);
	HX_MARK_MEMBER_NAME(offset,"offset");
	HX_MARK_MEMBER_NAME(s,"s");
	HX_MARK_END_CLASS();
}

void StringIterator_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(offset,"offset");
	HX_VISIT_MEMBER_NAME(s,"s");
}

::hx::Val StringIterator_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"s") ) { return ::hx::Val( s ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"next") ) { return ::hx::Val( next_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"offset") ) { return ::hx::Val( offset ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"hasNext") ) { return ::hx::Val( hasNext_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val StringIterator_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"s") ) { s=inValue.Cast< ::String >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"offset") ) { offset=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StringIterator_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("offset",93,97,3f,60));
	outFields->push(HX_("s",73,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo StringIterator_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(StringIterator_obj,offset),HX_("offset",93,97,3f,60)},
	{::hx::fsString,(int)offsetof(StringIterator_obj,s),HX_("s",73,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *StringIterator_obj_sStaticStorageInfo = 0;
#endif

static ::String StringIterator_obj_sMemberFields[] = {
	HX_("offset",93,97,3f,60),
	HX_("s",73,00,00,00),
	HX_("hasNext",6d,a5,46,18),
	HX_("next",f3,84,02,49),
	::String(null()) };

::hx::Class StringIterator_obj::__mClass;

void StringIterator_obj::__register()
{
	StringIterator_obj _hx_dummy;
	StringIterator_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.iterators.StringIterator",d0,34,a0,7c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(StringIterator_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< StringIterator_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringIterator_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringIterator_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace iterators
