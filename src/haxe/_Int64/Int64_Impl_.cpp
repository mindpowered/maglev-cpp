// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_Int64Helper
#include <haxe/Int64Helper.h>
#endif
#ifndef INCLUDED_haxe__Int64_Int64_Impl_
#include <haxe/_Int64/Int64_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_141_copy,"haxe._Int64.Int64_Impl_","copy",0xdafd68ae,"haxe._Int64.Int64_Impl_.copy","/opt/haxe/std/cpp/_std/haxe/Int64.hx",141,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_144_make,"haxe._Int64.Int64_Impl_","make",0xe18ee6e7,"haxe._Int64.Int64_Impl_.make","/opt/haxe/std/cpp/_std/haxe/Int64.hx",144,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_149_ofInt,"haxe._Int64.Int64_Impl_","ofInt",0xa57c98ff,"haxe._Int64.Int64_Impl_.ofInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",149,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_152_toInt,"haxe._Int64.Int64_Impl_","toInt",0x8c706b1b,"haxe._Int64.Int64_Impl_.toInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",152,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_161_is,"haxe._Int64.Int64_Impl_","is",0xecc1a8a3,"haxe._Int64.Int64_Impl_.is","/opt/haxe/std/cpp/_std/haxe/Int64.hx",161,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_165_isInt64,"haxe._Int64.Int64_Impl_","isInt64",0xa9b72e4a,"haxe._Int64.Int64_Impl_.isInt64","/opt/haxe/std/cpp/_std/haxe/Int64.hx",165,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_169_getHigh,"haxe._Int64.Int64_Impl_","getHigh",0x66a1dbbf,"haxe._Int64.Int64_Impl_.getHigh","/opt/haxe/std/cpp/_std/haxe/Int64.hx",169,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_173_getLow,"haxe._Int64.Int64_Impl_","getLow",0x7d9a2ad7,"haxe._Int64.Int64_Impl_.getLow","/opt/haxe/std/cpp/_std/haxe/Int64.hx",173,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_176_isNeg,"haxe._Int64.Int64_Impl_","isNeg",0x39b0a76d,"haxe._Int64.Int64_Impl_.isNeg","/opt/haxe/std/cpp/_std/haxe/Int64.hx",176,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_179_isZero,"haxe._Int64.Int64_Impl_","isZero",0x48d0716b,"haxe._Int64.Int64_Impl_.isZero","/opt/haxe/std/cpp/_std/haxe/Int64.hx",179,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_182_compare,"haxe._Int64.Int64_Impl_","compare",0xd27a0d4c,"haxe._Int64.Int64_Impl_.compare","/opt/haxe/std/cpp/_std/haxe/Int64.hx",182,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_185_ucompare,"haxe._Int64.Int64_Impl_","ucompare",0x873c5e49,"haxe._Int64.Int64_Impl_.ucompare","/opt/haxe/std/cpp/_std/haxe/Int64.hx",185,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_188_toStr,"haxe._Int64.Int64_Impl_","toStr",0x8c7806dd,"haxe._Int64.Int64_Impl_.toStr","/opt/haxe/std/cpp/_std/haxe/Int64.hx",188,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_191_toString,"haxe._Int64.Int64_Impl_","toString",0x1833ee25,"haxe._Int64.Int64_Impl_.toString","/opt/haxe/std/cpp/_std/haxe/Int64.hx",191,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_194_parseString,"haxe._Int64.Int64_Impl_","parseString",0x90f2a98b,"haxe._Int64.Int64_Impl_.parseString","/opt/haxe/std/cpp/_std/haxe/Int64.hx",194,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_198_fromFloat,"haxe._Int64.Int64_Impl_","fromFloat",0xa3d45c39,"haxe._Int64.Int64_Impl_.fromFloat","/opt/haxe/std/cpp/_std/haxe/Int64.hx",198,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_201_divMod,"haxe._Int64.Int64_Impl_","divMod",0x9975972a,"haxe._Int64.Int64_Impl_.divMod","/opt/haxe/std/cpp/_std/haxe/Int64.hx",201,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_214_neg,"haxe._Int64.Int64_Impl_","neg",0x3cb5a577,"haxe._Int64.Int64_Impl_.neg","/opt/haxe/std/cpp/_std/haxe/Int64.hx",214,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_221_preIncrement,"haxe._Int64.Int64_Impl_","preIncrement",0xc892b785,"haxe._Int64.Int64_Impl_.preIncrement","/opt/haxe/std/cpp/_std/haxe/Int64.hx",221,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_231_postIncrement,"haxe._Int64.Int64_Impl_","postIncrement",0x70724196,"haxe._Int64.Int64_Impl_.postIncrement","/opt/haxe/std/cpp/_std/haxe/Int64.hx",231,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_240_preDecrement,"haxe._Int64.Int64_Impl_","preDecrement",0xa715a769,"haxe._Int64.Int64_Impl_.preDecrement","/opt/haxe/std/cpp/_std/haxe/Int64.hx",240,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_250_postDecrement,"haxe._Int64.Int64_Impl_","postDecrement",0x4ef5317a,"haxe._Int64.Int64_Impl_.postDecrement","/opt/haxe/std/cpp/_std/haxe/Int64.hx",250,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_256_add,"haxe._Int64.Int64_Impl_","add",0x3cabc748,"haxe._Int64.Int64_Impl_.add","/opt/haxe/std/cpp/_std/haxe/Int64.hx",256,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_261_addInt,"haxe._Int64.Int64_Impl_","addInt",0x7979ba87,"haxe._Int64.Int64_Impl_.addInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",261,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_265_sub,"haxe._Int64.Int64_Impl_","sub",0x3cb97ea7,"haxe._Int64.Int64_Impl_.sub","/opt/haxe/std/cpp/_std/haxe/Int64.hx",265,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_270_subInt,"haxe._Int64.Int64_Impl_","subInt",0x7463a888,"haxe._Int64.Int64_Impl_.subInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",270,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_274_intSub,"haxe._Int64.Int64_Impl_","intSub",0x78f1710a,"haxe._Int64.Int64_Impl_.intSub","/opt/haxe/std/cpp/_std/haxe/Int64.hx",274,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_278_mul,"haxe._Int64.Int64_Impl_","mul",0x3cb4f12b,"haxe._Int64.Int64_Impl_.mul","/opt/haxe/std/cpp/_std/haxe/Int64.hx",278,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_283_mulInt,"haxe._Int64.Int64_Impl_","mulInt",0x14dba084,"haxe._Int64.Int64_Impl_.mulInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",283,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_286_div,"haxe._Int64.Int64_Impl_","div",0x3cae1278,"haxe._Int64.Int64_Impl_.div","/opt/haxe/std/cpp/_std/haxe/Int64.hx",286,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_294_divInt,"haxe._Int64.Int64_Impl_","divInt",0x99728d57,"haxe._Int64.Int64_Impl_.divInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",294,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_298_intDiv,"haxe._Int64.Int64_Impl_","intDiv",0x78e604db,"haxe._Int64.Int64_Impl_.intDiv","/opt/haxe/std/cpp/_std/haxe/Int64.hx",298,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_301_mod,"haxe._Int64.Int64_Impl_","mod",0x3cb4ebe9,"haxe._Int64.Int64_Impl_.mod","/opt/haxe/std/cpp/_std/haxe/Int64.hx",301,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_309_modInt,"haxe._Int64.Int64_Impl_","modInt",0x9b2a7086,"haxe._Int64.Int64_Impl_.modInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",309,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_313_intMod,"haxe._Int64.Int64_Impl_","intMod",0x78ecde4c,"haxe._Int64.Int64_Impl_.intMod","/opt/haxe/std/cpp/_std/haxe/Int64.hx",313,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_317_eq,"haxe._Int64.Int64_Impl_","eq",0xecc1a525,"haxe._Int64.Int64_Impl_.eq","/opt/haxe/std/cpp/_std/haxe/Int64.hx",317,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_322_eqInt,"haxe._Int64.Int64_Impl_","eqInt",0xeac024ca,"haxe._Int64.Int64_Impl_.eqInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",322,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_326_neq,"haxe._Int64.Int64_Impl_","neq",0x3cb5a581,"haxe._Int64.Int64_Impl_.neq","/opt/haxe/std/cpp/_std/haxe/Int64.hx",326,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_331_neqInt,"haxe._Int64.Int64_Impl_","neqInt",0x481bc5ee,"haxe._Int64.Int64_Impl_.neqInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",331,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_335_lt,"haxe._Int64.Int64_Impl_","lt",0xecc1ab41,"haxe._Int64.Int64_Impl_.lt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",335,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_339_ltInt,"haxe._Int64.Int64_Impl_","ltInt",0xf489d82e,"haxe._Int64.Int64_Impl_.ltInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",339,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_343_intLt,"haxe._Int64.Int64_Impl_","intLt",0x367f563e,"haxe._Int64.Int64_Impl_.intLt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",343,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_347_lte,"haxe._Int64.Int64_Impl_","lte",0x3cb42e04,"haxe._Int64.Int64_Impl_.lte","/opt/haxe/std/cpp/_std/haxe/Int64.hx",347,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_351_lteInt,"haxe._Int64.Int64_Impl_","lteInt",0x1679314b,"haxe._Int64.Int64_Impl_.lteInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",351,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_355_intLte,"haxe._Int64.Int64_Impl_","intLte",0x78ec2067,"haxe._Int64.Int64_Impl_.intLte","/opt/haxe/std/cpp/_std/haxe/Int64.hx",355,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_359_gt,"haxe._Int64.Int64_Impl_","gt",0xecc1a6e6,"haxe._Int64.Int64_Impl_.gt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",359,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_363_gtInt,"haxe._Int64.Int64_Impl_","gtInt",0x1388f1a9,"haxe._Int64.Int64_Impl_.gtInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",363,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_367_intGt,"haxe._Int64.Int64_Impl_","intGt",0x367f51e3,"haxe._Int64.Int64_Impl_.intGt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",367,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_371_gte,"haxe._Int64.Int64_Impl_","gte",0x3cb062bf,"haxe._Int64.Int64_Impl_.gte","/opt/haxe/std/cpp/_std/haxe/Int64.hx",371,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_375_gteInt,"haxe._Int64.Int64_Impl_","gteInt",0x16b06370,"haxe._Int64.Int64_Impl_.gteInt","/opt/haxe/std/cpp/_std/haxe/Int64.hx",375,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_379_intGte,"haxe._Int64.Int64_Impl_","intGte",0x78e85522,"haxe._Int64.Int64_Impl_.intGte","/opt/haxe/std/cpp/_std/haxe/Int64.hx",379,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_383_complement,"haxe._Int64.Int64_Impl_","complement",0x2f16709f,"haxe._Int64.Int64_Impl_.complement","/opt/haxe/std/cpp/_std/haxe/Int64.hx",383,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_387_and,"haxe._Int64.Int64_Impl_","and",0x3cabcffe,"haxe._Int64.Int64_Impl_.and","/opt/haxe/std/cpp/_std/haxe/Int64.hx",387,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_391_or,"haxe._Int64.Int64_Impl_","or",0xecc1addc,"haxe._Int64.Int64_Impl_.or","/opt/haxe/std/cpp/_std/haxe/Int64.hx",391,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_395_xor,"haxe._Int64.Int64_Impl_","xor",0x3cbd44c2,"haxe._Int64.Int64_Impl_.xor","/opt/haxe/std/cpp/_std/haxe/Int64.hx",395,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_399_shl,"haxe._Int64.Int64_Impl_","shl",0x3cb9735e,"haxe._Int64.Int64_Impl_.shl","/opt/haxe/std/cpp/_std/haxe/Int64.hx",399,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_403_shr,"haxe._Int64.Int64_Impl_","shr",0x3cb97364,"haxe._Int64.Int64_Impl_.shr","/opt/haxe/std/cpp/_std/haxe/Int64.hx",403,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_407_ushr,"haxe._Int64.Int64_Impl_","ushr",0xe6e641e1,"haxe._Int64.Int64_Impl_.ushr","/opt/haxe/std/cpp/_std/haxe/Int64.hx",407,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_412_get_high,"haxe._Int64.Int64_Impl_","get_high",0xa48e1064,"haxe._Int64.Int64_Impl_.get_high","/opt/haxe/std/cpp/_std/haxe/Int64.hx",412,0x870722e5)
HX_LOCAL_STACK_FRAME(_hx_pos_d44a6f92bd0b2b1b_417_get_low,"haxe._Int64.Int64_Impl_","get_low",0x75d811d2,"haxe._Int64.Int64_Impl_.get_low","/opt/haxe/std/cpp/_std/haxe/Int64.hx",417,0x870722e5)
namespace haxe{
namespace _Int64{

void Int64_Impl__obj::__construct() { }

Dynamic Int64_Impl__obj::__CreateEmpty() { return new Int64_Impl__obj; }

void *Int64_Impl__obj::_hx_vtable = 0;

Dynamic Int64_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Int64_Impl__obj > _hx_result = new Int64_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Int64_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x66145239;
}

 cpp::Int64Struct Int64_Impl__obj::copy( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_141_copy)
HXDLIN( 141)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,copy,return )

 cpp::Int64Struct Int64_Impl__obj::make(int high,int low){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_144_make)
HXDLIN( 144)		return _hx_int64_make(high,low);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,make,return )

 cpp::Int64Struct Int64_Impl__obj::ofInt(int x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_149_ofInt)
HXDLIN( 149)		return ( ::cpp::Int64Struct(x));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,ofInt,return )

int Int64_Impl__obj::toInt( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_152_toInt)
HXLINE( 153)		int _hx_tmp = _hx_int64_high(x);
HXDLIN( 153)		if ((_hx_tmp != (_hx_int64_low(x) >> 31))) {
HXLINE( 154)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("Overflow",62,9f,ed,1a)));
            		}
HXLINE( 156)		return _hx_int64_low(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,toInt,return )

bool Int64_Impl__obj::is( ::Dynamic val){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_161_is)
HXDLIN( 161)		return ( ::cpp::Int64Struct::is(val));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,is,return )

bool Int64_Impl__obj::isInt64( ::Dynamic val){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_165_isInt64)
HXDLIN( 165)		return ( ::cpp::Int64Struct::is(val));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,isInt64,return )

int Int64_Impl__obj::getHigh( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_169_getHigh)
HXDLIN( 169)		return _hx_int64_high(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,getHigh,return )

int Int64_Impl__obj::getLow( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_173_getLow)
HXDLIN( 173)		return _hx_int64_low(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,getLow,return )

bool Int64_Impl__obj::isNeg( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_176_isNeg)
HXDLIN( 176)		return _hx_int64_is_neg(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,isNeg,return )

bool Int64_Impl__obj::isZero( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_179_isZero)
HXDLIN( 179)		return _hx_int64_is_zero(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,isZero,return )

int Int64_Impl__obj::compare( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_182_compare)
HXDLIN( 182)		return _hx_int64_compare(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,compare,return )

int Int64_Impl__obj::ucompare( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_185_ucompare)
HXDLIN( 185)		return _hx_int64_ucompare(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,ucompare,return )

::String Int64_Impl__obj::toStr( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_188_toStr)
HXDLIN( 188)		return _hx_int64_to_string(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,toStr,return )

::String Int64_Impl__obj::toString( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_191_toString)
HXDLIN( 191)		return _hx_int64_to_string(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,toString,return )

 cpp::Int64Struct Int64_Impl__obj::parseString(::String sParam){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_194_parseString)
HXDLIN( 194)		return ::haxe::Int64Helper_obj::parseString(sParam);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,parseString,return )

 cpp::Int64Struct Int64_Impl__obj::fromFloat(Float f){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_198_fromFloat)
HXDLIN( 198)		return ::haxe::Int64Helper_obj::fromFloat(f);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,fromFloat,return )

 ::Dynamic Int64_Impl__obj::divMod( cpp::Int64Struct dividend, cpp::Int64Struct divisor){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_201_divMod)
HXLINE( 202)		if (_hx_int64_is_zero(divisor)) {
HXLINE( 202)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXDLIN( 202)		 cpp::Int64Struct q = _hx_int64_div(dividend,divisor);
HXLINE( 204)		if (_hx_int64_is_zero(divisor)) {
HXLINE( 205)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXLINE( 207)		 cpp::Int64Struct m = _hx_int64_sub(dividend,_hx_int64_mul(q,divisor));
HXLINE( 209)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("quotient",ab,68,60,b2),q)
            			->setFixed(1,HX_("modulus",37,f0,fa,f7),m));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,divMod,return )

 cpp::Int64Struct Int64_Impl__obj::neg( cpp::Int64Struct x){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_214_neg)
HXDLIN( 214)		return _hx_int64_neg(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,neg,return )

 cpp::Int64Struct Int64_Impl__obj::preIncrement( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_221_preIncrement)
HXDLIN( 221)		return _hx_int64_pre_increment(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,preIncrement,return )

 cpp::Int64Struct Int64_Impl__obj::postIncrement( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_231_postIncrement)
HXDLIN( 231)		return _hx_int64_post_increment(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,postIncrement,return )

 cpp::Int64Struct Int64_Impl__obj::preDecrement( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_240_preDecrement)
HXDLIN( 240)		return _hx_int64_pre_decrement(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,preDecrement,return )

 cpp::Int64Struct Int64_Impl__obj::postDecrement( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_250_postDecrement)
HXDLIN( 250)		return _hx_int64_post_decrement(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,postDecrement,return )

 cpp::Int64Struct Int64_Impl__obj::add( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_256_add)
HXDLIN( 256)		return _hx_int64_add(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,add,return )

 cpp::Int64Struct Int64_Impl__obj::addInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_261_addInt)
HXDLIN( 261)		return _hx_int64_add(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,addInt,return )

 cpp::Int64Struct Int64_Impl__obj::sub( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_265_sub)
HXDLIN( 265)		return _hx_int64_sub(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,sub,return )

 cpp::Int64Struct Int64_Impl__obj::subInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_270_subInt)
HXDLIN( 270)		return _hx_int64_sub(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,subInt,return )

 cpp::Int64Struct Int64_Impl__obj::intSub(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_274_intSub)
HXDLIN( 274)		return _hx_int64_sub(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intSub,return )

 cpp::Int64Struct Int64_Impl__obj::mul( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_278_mul)
HXDLIN( 278)		return _hx_int64_mul(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,mul,return )

 cpp::Int64Struct Int64_Impl__obj::mulInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_283_mulInt)
HXDLIN( 283)		return _hx_int64_mul(a,( ::cpp::Int64Struct(b)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,mulInt,return )

 cpp::Int64Struct Int64_Impl__obj::div( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_286_div)
HXLINE( 287)		if (_hx_int64_is_zero(b)) {
HXLINE( 288)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXLINE( 289)		return _hx_int64_div(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,div,return )

 cpp::Int64Struct Int64_Impl__obj::divInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_294_divInt)
HXDLIN( 294)		 cpp::Int64Struct b1 = ( ::cpp::Int64Struct(b));
HXDLIN( 294)		if (_hx_int64_is_zero(b1)) {
HXDLIN( 294)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXDLIN( 294)		return _hx_int64_div(a,b1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,divInt,return )

 cpp::Int64Struct Int64_Impl__obj::intDiv(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_298_intDiv)
HXDLIN( 298)		 cpp::Int64Struct a1 = ( ::cpp::Int64Struct(a));
HXDLIN( 298)		if (_hx_int64_is_zero(b)) {
HXDLIN( 298)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXDLIN( 298)		 cpp::Int64Struct x = _hx_int64_div(a1,b);
HXDLIN( 298)		int _hx_tmp = _hx_int64_high(x);
HXDLIN( 298)		if ((_hx_tmp != (_hx_int64_low(x) >> 31))) {
HXDLIN( 298)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("Overflow",62,9f,ed,1a)));
            		}
HXDLIN( 298)		return ( ::cpp::Int64Struct(_hx_int64_low(x)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intDiv,return )

 cpp::Int64Struct Int64_Impl__obj::mod( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_301_mod)
HXLINE( 302)		if (_hx_int64_is_zero(b)) {
HXLINE( 303)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXLINE( 304)		return _hx_int64_mod(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,mod,return )

 cpp::Int64Struct Int64_Impl__obj::modInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_309_modInt)
HXDLIN( 309)		 cpp::Int64Struct b1 = ( ::cpp::Int64Struct(b));
HXDLIN( 309)		if (_hx_int64_is_zero(b1)) {
HXDLIN( 309)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXDLIN( 309)		 cpp::Int64Struct x = _hx_int64_mod(a,b1);
HXDLIN( 309)		int _hx_tmp = _hx_int64_high(x);
HXDLIN( 309)		if ((_hx_tmp != (_hx_int64_low(x) >> 31))) {
HXDLIN( 309)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("Overflow",62,9f,ed,1a)));
            		}
HXDLIN( 309)		return ( ::cpp::Int64Struct(_hx_int64_low(x)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,modInt,return )

 cpp::Int64Struct Int64_Impl__obj::intMod(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_313_intMod)
HXDLIN( 313)		 cpp::Int64Struct a1 = ( ::cpp::Int64Struct(a));
HXDLIN( 313)		if (_hx_int64_is_zero(b)) {
HXDLIN( 313)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("divide by zero",6a,d2,eb,57)));
            		}
HXDLIN( 313)		 cpp::Int64Struct x = _hx_int64_mod(a1,b);
HXDLIN( 313)		int _hx_tmp = _hx_int64_high(x);
HXDLIN( 313)		if ((_hx_tmp != (_hx_int64_low(x) >> 31))) {
HXDLIN( 313)			HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("Overflow",62,9f,ed,1a)));
            		}
HXDLIN( 313)		return ( ::cpp::Int64Struct(_hx_int64_low(x)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intMod,return )

bool Int64_Impl__obj::eq( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_317_eq)
HXDLIN( 317)		return _hx_int64_eq(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,eq,return )

bool Int64_Impl__obj::eqInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_322_eqInt)
HXDLIN( 322)		return _hx_int64_eq(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,eqInt,return )

bool Int64_Impl__obj::neq( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_326_neq)
HXDLIN( 326)		return _hx_int64_neq(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,neq,return )

bool Int64_Impl__obj::neqInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_331_neqInt)
HXDLIN( 331)		return _hx_int64_neq(a,( ::cpp::Int64Struct(b)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,neqInt,return )

bool Int64_Impl__obj::lt( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_335_lt)
HXDLIN( 335)		return (_hx_int64_compare(a,b) < 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,lt,return )

bool Int64_Impl__obj::ltInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_339_ltInt)
HXDLIN( 339)		return (_hx_int64_compare(a,( ::cpp::Int64Struct(b))) < 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,ltInt,return )

bool Int64_Impl__obj::intLt(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_343_intLt)
HXDLIN( 343)		return (_hx_int64_compare(( ::cpp::Int64Struct(a)),b) < 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intLt,return )

bool Int64_Impl__obj::lte( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_347_lte)
HXDLIN( 347)		return (_hx_int64_compare(a,b) <= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,lte,return )

bool Int64_Impl__obj::lteInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_351_lteInt)
HXDLIN( 351)		return (_hx_int64_compare(a,( ::cpp::Int64Struct(b))) <= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,lteInt,return )

bool Int64_Impl__obj::intLte(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_355_intLte)
HXDLIN( 355)		return (_hx_int64_compare(( ::cpp::Int64Struct(a)),b) <= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intLte,return )

bool Int64_Impl__obj::gt( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_359_gt)
HXDLIN( 359)		return (_hx_int64_compare(a,b) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,gt,return )

bool Int64_Impl__obj::gtInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_363_gtInt)
HXDLIN( 363)		return (_hx_int64_compare(a,( ::cpp::Int64Struct(b))) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,gtInt,return )

bool Int64_Impl__obj::intGt(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_367_intGt)
HXDLIN( 367)		return (_hx_int64_compare(( ::cpp::Int64Struct(a)),b) > 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intGt,return )

bool Int64_Impl__obj::gte( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_371_gte)
HXDLIN( 371)		return (_hx_int64_compare(a,b) >= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,gte,return )

bool Int64_Impl__obj::gteInt( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_375_gteInt)
HXDLIN( 375)		return (_hx_int64_compare(a,( ::cpp::Int64Struct(b))) >= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,gteInt,return )

bool Int64_Impl__obj::intGte(int a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_379_intGte)
HXDLIN( 379)		return (_hx_int64_compare(( ::cpp::Int64Struct(a)),b) >= 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,intGte,return )

 cpp::Int64Struct Int64_Impl__obj::complement( cpp::Int64Struct a){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_383_complement)
HXDLIN( 383)		return _hx_int64_complement(a);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,complement,return )

 cpp::Int64Struct Int64_Impl__obj::_hx_and( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_387_and)
HXDLIN( 387)		return _hx_int64_and(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,_hx_and,return )

 cpp::Int64Struct Int64_Impl__obj::_hx_or( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_391_or)
HXDLIN( 391)		return _hx_int64_or(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,_hx_or,return )

 cpp::Int64Struct Int64_Impl__obj::_hx_xor( cpp::Int64Struct a, cpp::Int64Struct b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_395_xor)
HXDLIN( 395)		return _hx_int64_xor(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,_hx_xor,return )

 cpp::Int64Struct Int64_Impl__obj::shl( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_399_shl)
HXDLIN( 399)		return _hx_int64_shl(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,shl,return )

 cpp::Int64Struct Int64_Impl__obj::shr( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_403_shr)
HXDLIN( 403)		return _hx_int64_shr(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,shr,return )

 cpp::Int64Struct Int64_Impl__obj::ushr( cpp::Int64Struct a,int b){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_407_ushr)
HXDLIN( 407)		return _hx_int64_ushr(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Int64_Impl__obj,ushr,return )

int Int64_Impl__obj::get_high( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_412_get_high)
HXDLIN( 412)		return _hx_int64_high(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,get_high,return )

int Int64_Impl__obj::get_low( cpp::Int64Struct this1){
            	HX_STACKFRAME(&_hx_pos_d44a6f92bd0b2b1b_417_get_low)
HXDLIN( 417)		return _hx_int64_low(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Int64_Impl__obj,get_low,return )


Int64_Impl__obj::Int64_Impl__obj()
{
}

bool Int64_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"is") ) { outValue = is_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eq") ) { outValue = eq_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lt") ) { outValue = lt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"gt") ) { outValue = gt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"or") ) { outValue = _hx_or_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"neg") ) { outValue = neg_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sub") ) { outValue = sub_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mul") ) { outValue = mul_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"div") ) { outValue = div_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mod") ) { outValue = mod_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"neq") ) { outValue = neq_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lte") ) { outValue = lte_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"gte") ) { outValue = gte_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"and") ) { outValue = _hx_and_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"xor") ) { outValue = _hx_xor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"shl") ) { outValue = shl_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"shr") ) { outValue = shr_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"make") ) { outValue = make_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ushr") ) { outValue = ushr_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"ofInt") ) { outValue = ofInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isNeg") ) { outValue = isNeg_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toStr") ) { outValue = toStr_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eqInt") ) { outValue = eqInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ltInt") ) { outValue = ltInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intLt") ) { outValue = intLt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"gtInt") ) { outValue = gtInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intGt") ) { outValue = intGt_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getLow") ) { outValue = getLow_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isZero") ) { outValue = isZero_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"divMod") ) { outValue = divMod_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addInt") ) { outValue = addInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subInt") ) { outValue = subInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intSub") ) { outValue = intSub_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mulInt") ) { outValue = mulInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"divInt") ) { outValue = divInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intDiv") ) { outValue = intDiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"modInt") ) { outValue = modInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intMod") ) { outValue = intMod_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"neqInt") ) { outValue = neqInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lteInt") ) { outValue = lteInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intLte") ) { outValue = intLte_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"gteInt") ) { outValue = gteInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"intGte") ) { outValue = intGte_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"isInt64") ) { outValue = isInt64_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getHigh") ) { outValue = getHigh_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"compare") ) { outValue = compare_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_low") ) { outValue = get_low_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ucompare") ) { outValue = ucompare_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_high") ) { outValue = get_high_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromFloat") ) { outValue = fromFloat_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"complement") ) { outValue = complement_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"parseString") ) { outValue = parseString_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"preIncrement") ) { outValue = preIncrement_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"preDecrement") ) { outValue = preDecrement_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"postIncrement") ) { outValue = postIncrement_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"postDecrement") ) { outValue = postDecrement_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Int64_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Int64_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Int64_Impl__obj::__mClass;

static ::String Int64_Impl__obj_sStaticFields[] = {
	HX_("copy",b5,bb,c4,41),
	HX_("make",ee,39,56,48),
	HX_("ofInt",18,ec,1d,2d),
	HX_("toInt",34,be,11,14),
	HX_("is",ea,5b,00,00),
	HX_("isInt64",a3,39,a6,5a),
	HX_("getHigh",18,e7,90,17),
	HX_("getLow",9e,8d,21,a3),
	HX_("isNeg",86,fa,51,c1),
	HX_("isZero",32,d4,57,6e),
	HX_("compare",a5,18,69,83),
	HX_("ucompare",d0,40,77,a7),
	HX_("toStr",f6,59,19,14),
	HX_("toString",ac,d0,6e,38),
	HX_("parseString",64,d5,6c,8c),
	HX_("fromFloat",d2,af,1f,b7),
	HX_("divMod",f1,f9,fc,be),
	HX_("neg",50,d0,53,00),
	HX_("preIncrement",8c,e9,fe,d7),
	HX_("postIncrement",af,d5,b1,df),
	HX_("preDecrement",70,d9,81,b6),
	HX_("postDecrement",93,c5,34,be),
	HX_("add",21,f2,49,00),
	HX_("addInt",4e,1d,01,9f),
	HX_("sub",80,a9,57,00),
	HX_("subInt",4f,0b,eb,99),
	HX_("intSub",d1,d3,78,9e),
	HX_("mul",04,1c,53,00),
	HX_("mulInt",4b,03,63,3a),
	HX_("div",51,3d,4c,00),
	HX_("divInt",1e,f0,f9,be),
	HX_("intDiv",a2,67,6d,9e),
	HX_("mod",c2,16,53,00),
	HX_("modInt",4d,d3,b1,c0),
	HX_("intMod",13,41,74,9e),
	HX_("eq",6c,58,00,00),
	HX_("eqInt",e3,77,61,72),
	HX_("neq",5a,d0,53,00),
	HX_("neqInt",b5,28,a3,6d),
	HX_("lt",88,5e,00,00),
	HX_("ltInt",47,2b,2b,7c),
	HX_("intLt",57,a9,20,be),
	HX_("lte",dd,58,52,00),
	HX_("lteInt",12,94,00,3c),
	HX_("intLte",2e,83,73,9e),
	HX_("gt",2d,5a,00,00),
	HX_("gtInt",c2,44,2a,9b),
	HX_("intGt",fc,a4,20,be),
	HX_("gte",98,8d,4e,00),
	HX_("gteInt",37,c6,37,3c),
	HX_("intGte",e9,b7,6f,9e),
	HX_("complement",e6,42,b4,fd),
	HX_("and",d7,fa,49,00),
	HX_("or",23,61,00,00),
	HX_("xor",9b,6f,5b,00),
	HX_("shl",37,9e,57,00),
	HX_("shr",3d,9e,57,00),
	HX_("ushr",e8,94,ad,4d),
	HX_("get_high",eb,f2,c8,c4),
	HX_("get_low",2b,1d,c7,26),
	::String(null())
};

void Int64_Impl__obj::__register()
{
	Int64_Impl__obj _hx_dummy;
	Int64_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe._Int64.Int64_Impl_",15,d6,6c,a0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Int64_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Int64_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Int64_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Int64_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Int64_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace _Int64
