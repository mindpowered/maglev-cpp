// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_7625ac700f09f214
#define INCLUDED_7625ac700f09f214
#include "functional"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_cpp_Finalizable
#include <cpp/Finalizable.h>
#endif
#ifndef INCLUDED_maglev_CppAny
#include <maglev/CppAny.h>
#endif
#ifndef INCLUDED_maglev_CppResultCallbackPtr
#include <maglev/CppResultCallbackPtr.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2903a49f7dcde09e_46_new,"maglev.CppResultCallbackPtr","new",0xc716f9ff,"maglev.CppResultCallbackPtr.new","maglev/CppResultCallback.hx",46,0xd60e1dfe)
HX_LOCAL_STACK_FRAME(_hx_pos_2903a49f7dcde09e_52_call,"maglev.CppResultCallbackPtr","call",0x65bb5a1f,"maglev.CppResultCallbackPtr.call","maglev/CppResultCallback.hx",52,0xd60e1dfe)
HX_LOCAL_STACK_FRAME(_hx_pos_2903a49f7dcde09e_57_finalize,"maglev.CppResultCallbackPtr","finalize",0x0020db9f,"maglev.CppResultCallbackPtr.finalize","maglev/CppResultCallback.hx",57,0xd60e1dfe)
HX_LOCAL_STACK_FRAME(_hx_pos_2903a49f7dcde09e_60_toString,"maglev.CppResultCallbackPtr","toString",0x435566ad,"maglev.CppResultCallbackPtr.toString","maglev/CppResultCallback.hx",60,0xd60e1dfe)
namespace maglev{

void CppResultCallbackPtr_obj::__construct(::cpp::Function< void  ( ::maglev::CppAny) > inFunc){
            	HX_STACKFRAME(&_hx_pos_2903a49f7dcde09e_46_new)
HXLINE(  47)		super::__construct(null());
HXLINE(  48)		this->lambda = (new std::function<void(CppAny)>(inFunc));
            	}

Dynamic CppResultCallbackPtr_obj::__CreateEmpty() { return new CppResultCallbackPtr_obj; }

void *CppResultCallbackPtr_obj::_hx_vtable = 0;

Dynamic CppResultCallbackPtr_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CppResultCallbackPtr_obj > _hx_result = new CppResultCallbackPtr_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CppResultCallbackPtr_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x02559257) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x02559257;
	} else {
		return inClassId==(int)0x5b6e46de;
	}
}

void CppResultCallbackPtr_obj::call( ::maglev::CppAny ret){
            	HX_STACKFRAME(&_hx_pos_2903a49f7dcde09e_52_call)
HXDLIN(  52)		this->lambda->get_ref().operator()(ret);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppResultCallbackPtr_obj,call,(void))

void CppResultCallbackPtr_obj::finalize(){
            	HX_STACKFRAME(&_hx_pos_2903a49f7dcde09e_57_finalize)
HXDLIN(  57)		this->lambda->destroy();
            	}


::String CppResultCallbackPtr_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_2903a49f7dcde09e_60_toString)
HXDLIN(  60)		return ((HX_("functional(",c5,4c,91,02) + ::Std_obj::string(this->lambda)) + HX_(")",29,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppResultCallbackPtr_obj,toString,return )


::hx::ObjectPtr< CppResultCallbackPtr_obj > CppResultCallbackPtr_obj::__new(::cpp::Function< void  ( ::maglev::CppAny) > inFunc) {
	::hx::ObjectPtr< CppResultCallbackPtr_obj > __this = new CppResultCallbackPtr_obj();
	__this->__construct(inFunc);
	return __this;
}

::hx::ObjectPtr< CppResultCallbackPtr_obj > CppResultCallbackPtr_obj::__alloc(::hx::Ctx *_hx_ctx,::cpp::Function< void  ( ::maglev::CppAny) > inFunc) {
	CppResultCallbackPtr_obj *__this = (CppResultCallbackPtr_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CppResultCallbackPtr_obj), true, "maglev.CppResultCallbackPtr"));
	*(void **)__this = CppResultCallbackPtr_obj::_hx_vtable;
	__this->__construct(inFunc);
	return __this;
}

CppResultCallbackPtr_obj::CppResultCallbackPtr_obj()
{
}

void CppResultCallbackPtr_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CppResultCallbackPtr);
	HX_MARK_MEMBER_NAME(lambda,"lambda");
	HX_MARK_END_CLASS();
}

void CppResultCallbackPtr_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(lambda,"lambda");
}

::hx::Val CppResultCallbackPtr_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"call") ) { return ::hx::Val( call_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"lambda") ) { return ::hx::Val( lambda ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"finalize") ) { return ::hx::Val( finalize_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CppResultCallbackPtr_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"lambda") ) { lambda=inValue.Cast< ::cpp::Pointer<  std::function<void(CppAny)> > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CppResultCallbackPtr_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("lambda",07,33,c0,50));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CppResultCallbackPtr_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /* ::cpp::Pointer<  std::function<void(CppAny)> > */ ,(int)offsetof(CppResultCallbackPtr_obj,lambda),HX_("lambda",07,33,c0,50)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CppResultCallbackPtr_obj_sStaticStorageInfo = 0;
#endif

static ::String CppResultCallbackPtr_obj_sMemberFields[] = {
	HX_("lambda",07,33,c0,50),
	HX_("call",9e,18,ba,41),
	HX_("finalize",9e,45,3a,f5),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class CppResultCallbackPtr_obj::__mClass;

void CppResultCallbackPtr_obj::__register()
{
	CppResultCallbackPtr_obj _hx_dummy;
	CppResultCallbackPtr_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("maglev.CppResultCallbackPtr",8d,8e,7c,a4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CppResultCallbackPtr_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CppResultCallbackPtr_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CppResultCallbackPtr_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CppResultCallbackPtr_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace maglev
