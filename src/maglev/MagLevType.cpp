// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_maglev_MagLevType
#include <maglev/MagLevType.h>
#endif
namespace maglev{

::maglev::MagLevType MagLevType_obj::MagLevType_Array;

::maglev::MagLevType MagLevType_obj::MagLevType_Boolean;

::maglev::MagLevType MagLevType_obj::MagLevType_Error;

::maglev::MagLevType MagLevType_obj::MagLevType_Function;

::maglev::MagLevType MagLevType_obj::MagLevType_Null;

::maglev::MagLevType MagLevType_obj::MagLevType_Number;

::maglev::MagLevType MagLevType_obj::MagLevType_Object;

::maglev::MagLevType MagLevType_obj::MagLevType_Result;

::maglev::MagLevType MagLevType_obj::MagLevType_String;

bool MagLevType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("MagLevType_Array",be,46,f9,ab)) { outValue = MagLevType_obj::MagLevType_Array; return true; }
	if (inName==HX_("MagLevType_Boolean",0d,17,6d,d5)) { outValue = MagLevType_obj::MagLevType_Boolean; return true; }
	if (inName==HX_("MagLevType_Error",ed,a4,93,f9)) { outValue = MagLevType_obj::MagLevType_Error; return true; }
	if (inName==HX_("MagLevType_Function",13,57,4b,3d)) { outValue = MagLevType_obj::MagLevType_Function; return true; }
	if (inName==HX_("MagLevType_Null",02,f1,2c,5d)) { outValue = MagLevType_obj::MagLevType_Null; return true; }
	if (inName==HX_("MagLevType_Number",04,ae,ae,b7)) { outValue = MagLevType_obj::MagLevType_Number; return true; }
	if (inName==HX_("MagLevType_Object",fa,a5,73,2b)) { outValue = MagLevType_obj::MagLevType_Object; return true; }
	if (inName==HX_("MagLevType_Result",18,90,b8,1e)) { outValue = MagLevType_obj::MagLevType_Result; return true; }
	if (inName==HX_("MagLevType_String",0c,50,64,27)) { outValue = MagLevType_obj::MagLevType_String; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(MagLevType_obj)

int MagLevType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("MagLevType_Array",be,46,f9,ab)) return 4;
	if (inName==HX_("MagLevType_Boolean",0d,17,6d,d5)) return 7;
	if (inName==HX_("MagLevType_Error",ed,a4,93,f9)) return 1;
	if (inName==HX_("MagLevType_Function",13,57,4b,3d)) return 2;
	if (inName==HX_("MagLevType_Null",02,f1,2c,5d)) return 8;
	if (inName==HX_("MagLevType_Number",04,ae,ae,b7)) return 5;
	if (inName==HX_("MagLevType_Object",fa,a5,73,2b)) return 3;
	if (inName==HX_("MagLevType_Result",18,90,b8,1e)) return 0;
	if (inName==HX_("MagLevType_String",0c,50,64,27)) return 6;
	return super::__FindIndex(inName);
}

int MagLevType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("MagLevType_Array",be,46,f9,ab)) return 0;
	if (inName==HX_("MagLevType_Boolean",0d,17,6d,d5)) return 0;
	if (inName==HX_("MagLevType_Error",ed,a4,93,f9)) return 0;
	if (inName==HX_("MagLevType_Function",13,57,4b,3d)) return 0;
	if (inName==HX_("MagLevType_Null",02,f1,2c,5d)) return 0;
	if (inName==HX_("MagLevType_Number",04,ae,ae,b7)) return 0;
	if (inName==HX_("MagLevType_Object",fa,a5,73,2b)) return 0;
	if (inName==HX_("MagLevType_Result",18,90,b8,1e)) return 0;
	if (inName==HX_("MagLevType_String",0c,50,64,27)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val MagLevType_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("MagLevType_Array",be,46,f9,ab)) return MagLevType_Array;
	if (inName==HX_("MagLevType_Boolean",0d,17,6d,d5)) return MagLevType_Boolean;
	if (inName==HX_("MagLevType_Error",ed,a4,93,f9)) return MagLevType_Error;
	if (inName==HX_("MagLevType_Function",13,57,4b,3d)) return MagLevType_Function;
	if (inName==HX_("MagLevType_Null",02,f1,2c,5d)) return MagLevType_Null;
	if (inName==HX_("MagLevType_Number",04,ae,ae,b7)) return MagLevType_Number;
	if (inName==HX_("MagLevType_Object",fa,a5,73,2b)) return MagLevType_Object;
	if (inName==HX_("MagLevType_Result",18,90,b8,1e)) return MagLevType_Result;
	if (inName==HX_("MagLevType_String",0c,50,64,27)) return MagLevType_String;
	return super::__Field(inName,inCallProp);
}

static ::String MagLevType_obj_sStaticFields[] = {
	HX_("MagLevType_Result",18,90,b8,1e),
	HX_("MagLevType_Error",ed,a4,93,f9),
	HX_("MagLevType_Function",13,57,4b,3d),
	HX_("MagLevType_Object",fa,a5,73,2b),
	HX_("MagLevType_Array",be,46,f9,ab),
	HX_("MagLevType_Number",04,ae,ae,b7),
	HX_("MagLevType_String",0c,50,64,27),
	HX_("MagLevType_Boolean",0d,17,6d,d5),
	HX_("MagLevType_Null",02,f1,2c,5d),
	::String(null())
};

::hx::Class MagLevType_obj::__mClass;

Dynamic __Create_MagLevType_obj() { return new MagLevType_obj; }

void MagLevType_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("maglev.MagLevType",c8,c9,51,f3), ::hx::TCanCast< MagLevType_obj >,MagLevType_obj_sStaticFields,0,
	&__Create_MagLevType_obj, &__Create,
	&super::__SGetClass(), &CreateMagLevType_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &MagLevType_obj::__GetStatic;
}

void MagLevType_obj::__boot()
{
MagLevType_Array = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Array",be,46,f9,ab),4);
MagLevType_Boolean = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Boolean",0d,17,6d,d5),7);
MagLevType_Error = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Error",ed,a4,93,f9),1);
MagLevType_Function = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Function",13,57,4b,3d),2);
MagLevType_Null = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Null",02,f1,2c,5d),8);
MagLevType_Number = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Number",04,ae,ae,b7),5);
MagLevType_Object = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Object",fa,a5,73,2b),3);
MagLevType_Result = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_Result",18,90,b8,1e),0);
MagLevType_String = ::hx::CreateConstEnum< MagLevType_obj >(HX_("MagLevType_String",0c,50,64,27),6);
}


} // end namespace maglev
