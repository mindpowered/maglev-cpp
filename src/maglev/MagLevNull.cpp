// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_maglev_MagLevAny
#include <maglev/MagLevAny.h>
#endif
#ifndef INCLUDED_maglev_MagLevNull
#include <maglev/MagLevNull.h>
#endif
#ifndef INCLUDED_maglev_MagLevString
#include <maglev/MagLevString.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_25586abe6b76e172_567_new,"maglev.MagLevNull","new",0xb2260507,"maglev.MagLevNull.new","maglev/MagLev.hx",567,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_25586abe6b76e172_570_getType,"maglev.MagLevNull","getType",0x2072b697,"maglev.MagLevNull.getType","maglev/MagLev.hx",570,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_25586abe6b76e172_576_isEqual,"maglev.MagLevNull","isEqual",0x0fef8791,"maglev.MagLevNull.isEqual","maglev/MagLev.hx",576,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_25586abe6b76e172_584_toJson,"maglev.MagLevNull","toJson",0x070a9afc,"maglev.MagLevNull.toJson","maglev/MagLev.hx",584,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_25586abe6b76e172_564_create,"maglev.MagLevNull","create",0x06f854b5,"maglev.MagLevNull.create","maglev/MagLev.hx",564,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_25586abe6b76e172_573_getStaticType,"maglev.MagLevNull","getStaticType",0x365a7225,"maglev.MagLevNull.getStaticType","maglev/MagLev.hx",573,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_25586abe6b76e172_587_wrap,"maglev.MagLevNull","wrap",0x351b1743,"maglev.MagLevNull.wrap","maglev/MagLev.hx",587,0x5b19476f)
namespace maglev{

void MagLevNull_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_25586abe6b76e172_567_new)
HXDLIN( 567)		super::__construct();
            	}

Dynamic MagLevNull_obj::__CreateEmpty() { return new MagLevNull_obj; }

void *MagLevNull_obj::_hx_vtable = 0;

Dynamic MagLevNull_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MagLevNull_obj > _hx_result = new MagLevNull_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MagLevNull_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x7cdfae7b) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x7cdfae7b;
	} else {
		return inClassId==(int)0x7fdb9bc4;
	}
}

int MagLevNull_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_25586abe6b76e172_570_getType)
HXDLIN( 570)		return 1;
            	}


bool MagLevNull_obj::isEqual( ::maglev::MagLevAny other){
            	HX_STACKFRAME(&_hx_pos_25586abe6b76e172_576_isEqual)
HXDLIN( 576)		int _hx_tmp = other->getType();
HXDLIN( 576)		if ((_hx_tmp == this->getType())) {
HXLINE( 577)			return true;
            		}
            		else {
HXLINE( 580)			return false;
            		}
HXLINE( 576)		return false;
            	}


 ::maglev::MagLevString MagLevNull_obj::toJson(){
            	HX_GC_STACKFRAME(&_hx_pos_25586abe6b76e172_584_toJson)
HXDLIN( 584)		return  ::maglev::MagLevString_obj::__alloc( HX_CTX ,HX_("null",87,9e,0e,49));
            	}


 ::maglev::MagLevNull MagLevNull_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_25586abe6b76e172_564_create)
HXDLIN( 564)		return  ::maglev::MagLevNull_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MagLevNull_obj,create,return )

int MagLevNull_obj::getStaticType(){
            	HX_STACKFRAME(&_hx_pos_25586abe6b76e172_573_getStaticType)
HXDLIN( 573)		return 1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MagLevNull_obj,getStaticType,return )

 ::maglev::MagLevAny MagLevNull_obj::wrap( ::maglev::MagLevAny o){
            	HX_GC_STACKFRAME(&_hx_pos_25586abe6b76e172_587_wrap)
HXDLIN( 587)		if (::hx::IsNull( o )) {
HXLINE( 588)			return  ::maglev::MagLevNull_obj::__alloc( HX_CTX );
            		}
            		else {
HXLINE( 590)			return o;
            		}
HXLINE( 587)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MagLevNull_obj,wrap,return )


::hx::ObjectPtr< MagLevNull_obj > MagLevNull_obj::__new() {
	::hx::ObjectPtr< MagLevNull_obj > __this = new MagLevNull_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< MagLevNull_obj > MagLevNull_obj::__alloc(::hx::Ctx *_hx_ctx) {
	MagLevNull_obj *__this = (MagLevNull_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MagLevNull_obj), false, "maglev.MagLevNull"));
	*(void **)__this = MagLevNull_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MagLevNull_obj::MagLevNull_obj()
{
}

::hx::Val MagLevNull_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"toJson") ) { return ::hx::Val( toJson_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getType") ) { return ::hx::Val( getType_dyn() ); }
		if (HX_FIELD_EQ(inName,"isEqual") ) { return ::hx::Val( isEqual_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MagLevNull_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"wrap") ) { outValue = wrap_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getStaticType") ) { outValue = getStaticType_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MagLevNull_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *MagLevNull_obj_sStaticStorageInfo = 0;
#endif

static ::String MagLevNull_obj_sMemberFields[] = {
	HX_("getType",70,a2,8b,1f),
	HX_("isEqual",6a,73,08,0f),
	HX_("toJson",43,ad,21,7c),
	::String(null()) };

::hx::Class MagLevNull_obj::__mClass;

static ::String MagLevNull_obj_sStaticFields[] = {
	HX_("create",fc,66,0f,7c),
	HX_("getStaticType",be,46,27,0b),
	HX_("wrap",ca,39,ff,4e),
	::String(null())
};

void MagLevNull_obj::__register()
{
	MagLevNull_obj _hx_dummy;
	MagLevNull_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("maglev.MagLevNull",95,75,57,ef);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MagLevNull_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(MagLevNull_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MagLevNull_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MagLevNull_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MagLevNull_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MagLevNull_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace maglev
