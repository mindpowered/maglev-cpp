// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_f1f713c9e000f5d3
#define INCLUDED_f1f713c9e000f5d3
#include "array"
#endif
#ifndef INCLUDED_31a7389c9269a947
#define INCLUDED_31a7389c9269a947
#include "hx/StdString.h"
#endif
#ifndef INCLUDED_Std
#include <maglev/Std.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <maglev/haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <maglev/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <maglev/haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_maglev_CppAny
#include <maglev/maglev/CppAny.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dad498497c3f302d_30_new,"maglev.CppAny","new",0x402ba9df,"maglev.CppAny.new","maglev/CppAny.hx",30,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_37_getData,"maglev.CppAny","getData",0xa0020adf,"maglev.CppAny.getData","maglev/CppAny.hx",37,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_46_setData,"maglev.CppAny","setData",0x93039beb,"maglev.CppAny.setData","maglev/CppAny.hx",46,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_88_setNull,"maglev.CppAny","setNull",0x99aee448,"maglev.CppAny.setNull","maglev/CppAny.hx",88,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_93_isNull,"maglev.CppAny","isNull",0x2a3d4372,"maglev.CppAny.isNull","maglev/CppAny.hx",93,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_100_setDouble,"maglev.CppAny","setDouble",0x20592312,"maglev.CppAny.setDouble","maglev/CppAny.hx",100,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_105_setFloat,"maglev.CppAny","setFloat",0x3e3388bb,"maglev.CppAny.setFloat","maglev/CppAny.hx",105,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_110_getDouble,"maglev.CppAny","getDouble",0x3d083706,"maglev.CppAny.getDouble","maglev/CppAny.hx",110,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_116_getFloat,"maglev.CppAny","getFloat",0x8fd62f47,"maglev.CppAny.getFloat","maglev/CppAny.hx",116,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_124_isNumeric,"maglev.CppAny","isNumeric",0x3da5e2c2,"maglev.CppAny.isNumeric","maglev/CppAny.hx",124,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_136_setBool,"maglev.CppAny","setBool",0x91bbc9eb,"maglev.CppAny.setBool","maglev/CppAny.hx",136,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_140_getBool,"maglev.CppAny","getBool",0x9eba38df,"maglev.CppAny.getBool","maglev/CppAny.hx",140,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_147_isBool,"maglev.CppAny","isBool",0x224a2915,"maglev.CppAny.isBool","maglev/CppAny.hx",147,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_159_setString,"maglev.CppAny","setString",0xfebe20d2,"maglev.CppAny.setString","maglev/CppAny.hx",159,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_164_setStdString,"maglev.CppAny","setStdString",0x679b2073,"maglev.CppAny.setStdString","maglev/CppAny.hx",164,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_168_getString,"maglev.CppAny","getString",0x1b6d34c6,"maglev.CppAny.getString","maglev/CppAny.hx",168,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_174_getStdString,"maglev.CppAny","getStdString",0x52a1fcff,"maglev.CppAny.getStdString","maglev/CppAny.hx",174,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_181_isString,"maglev.CppAny","isString",0x97021e7c,"maglev.CppAny.isString","maglev/CppAny.hx",181,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_193_makeArray,"maglev.CppAny","makeArray",0x870e678a,"maglev.CppAny.makeArray","maglev/CppAny.hx",193,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_199_pushArray,"maglev.CppAny","pushArray",0xf791581e,"maglev.CppAny.pushArray","maglev/CppAny.hx",199,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_205_getArray,"maglev.CppAny","getArray",0xb2ced744,"maglev.CppAny.getArray","maglev/CppAny.hx",205,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_214_getCppAnyVector,"maglev.CppAny","getCppAnyVector",0x939cace1,"maglev.CppAny.getCppAnyVector","maglev/CppAny.hx",214,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_225_isArray,"maglev.CppAny","isArray",0x4d31164e,"maglev.CppAny.isArray","maglev/CppAny.hx",225,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_237_setMap,"maglev.CppAny","setMap",0x333277fb,"maglev.CppAny.setMap","maglev/CppAny.hx",237,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_241_getMap,"maglev.CppAny","getMap",0x66ea2387,"maglev.CppAny.getMap","maglev/CppAny.hx",241,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_250_getMapValue,"maglev.CppAny","getMapValue",0x858aa26a,"maglev.CppAny.getMapValue","maglev/CppAny.hx",250,0xb88aee50)
HX_LOCAL_STACK_FRAME(_hx_pos_dad498497c3f302d_260_getMapKeys,"maglev.CppAny","getMapKeys",0x1730011b,"maglev.CppAny.getMapKeys","maglev/CppAny.hx",260,0xb88aee50)
namespace maglev{

void CppAny_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_30_new)
HXDLIN(  30)		this->data = null();
            	}

Dynamic CppAny_obj::__CreateEmpty() { return new CppAny_obj; }

void *CppAny_obj::_hx_vtable = 0;

Dynamic CppAny_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CppAny_obj > _hx_result = new CppAny_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool CppAny_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x10781c53;
}

 ::Dynamic CppAny_obj::getData(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_37_getData)
HXDLIN(  37)		return this->data;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getData,return )

void CppAny_obj::setData( ::Dynamic any){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_46_setData)
HXDLIN(  46)		this->data = any;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,setData,(void))

void CppAny_obj::setNull(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_88_setNull)
HXDLIN(  88)		this->data = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,setNull,(void))

bool CppAny_obj::isNull(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_93_isNull)
HXDLIN(  93)		return ::hx::IsNull( this->data );
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,isNull,return )

void CppAny_obj::setDouble(double data){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_100_setDouble)
HXDLIN( 100)		this->data = data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,setDouble,(void))

void CppAny_obj::setFloat(Float data){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_105_setFloat)
HXDLIN( 105)		this->data = data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,setFloat,(void))

double CppAny_obj::getDouble(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_110_getDouble)
HXLINE( 111)		Float data = ( (Float)(::hx::TCast< double >::cast(this->data)) );
HXLINE( 112)		return ( (double)(data) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getDouble,return )

Float CppAny_obj::getFloat(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_116_getFloat)
HXLINE( 117)		Float data = ::hx::TCast< Float >::cast(this->data);
HXLINE( 118)		return data;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getFloat,return )

bool CppAny_obj::isNumeric(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_124_isNumeric)
HXDLIN( 124)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 125)			this->getFloat();
HXLINE( 126)			return true;
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(   1)				{
HXLINE(   1)					null();
            				}
HXLINE( 124)				if (::Std_obj::isOfType(::haxe::Exception_obj::caught(_g)->unwrap(),::hx::ClassOf< ::String >())) {
HXLINE( 128)					return false;
            				}
            				else {
HXDLIN( 124)					HX_STACK_DO_THROW(_g);
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 124)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,isNumeric,return )

void CppAny_obj::setBool(bool data){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_136_setBool)
HXDLIN( 136)		this->data = data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,setBool,(void))

bool CppAny_obj::getBool(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_140_getBool)
HXLINE( 141)		bool data = ::hx::TCast< bool >::cast(this->data);
HXLINE( 142)		return data;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getBool,return )

bool CppAny_obj::isBool(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_147_isBool)
HXDLIN( 147)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 148)			this->getBool();
HXLINE( 149)			return true;
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(   1)				{
HXLINE(   1)					null();
            				}
HXLINE( 147)				if (::Std_obj::isOfType(::haxe::Exception_obj::caught(_g)->unwrap(),::hx::ClassOf< ::String >())) {
HXLINE( 151)					return false;
            				}
            				else {
HXDLIN( 147)					HX_STACK_DO_THROW(_g);
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 147)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,isBool,return )

void CppAny_obj::setString(::String data){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_159_setString)
HXDLIN( 159)		this->data = data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,setString,(void))

void CppAny_obj::setStdString( hx::StdString data){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_164_setStdString)
HXDLIN( 164)		this->data = data.toString();
            	}


::String CppAny_obj::getString(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_168_getString)
HXLINE( 169)		::String data = ::hx::TCast< ::String >::cast(this->data);
HXLINE( 170)		return data;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getString,return )

 hx::StdString CppAny_obj::getStdString(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_174_getStdString)
HXLINE( 175)		 hx::StdString data = ::hx::StdString(::hx::TCast< ::String >::cast(this->data));
HXLINE( 176)		return data;
            	}


bool CppAny_obj::isString(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_181_isString)
HXDLIN( 181)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 182)			this->getString();
HXLINE( 183)			return true;
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(   1)				{
HXLINE(   1)					null();
            				}
HXLINE( 181)				if (::Std_obj::isOfType(::haxe::Exception_obj::caught(_g)->unwrap(),::hx::ClassOf< ::String >())) {
HXLINE( 185)					return false;
            				}
            				else {
HXDLIN( 181)					HX_STACK_DO_THROW(_g);
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 181)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,isString,return )

void CppAny_obj::makeArray(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_193_makeArray)
HXLINE( 194)		::Array< ::Dynamic> newArray = ::Array_obj< ::Dynamic>::__new();
HXLINE( 195)		this->data = newArray;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,makeArray,(void))

void CppAny_obj::pushArray( ::maglev::CppAny item){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_199_pushArray)
HXLINE( 200)		::Array< ::Dynamic> arr = this->getArray();
HXLINE( 201)		arr->push(item);
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,pushArray,(void))

::Array< ::Dynamic> CppAny_obj::getArray(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_205_getArray)
HXLINE( 206)		::Array< ::Dynamic> data = ( (::Array< ::Dynamic>)(this->data) );
HXLINE( 207)		return data;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getArray,return )

 std::vector<CppAny> CppAny_obj::getCppAnyVector(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_214_getCppAnyVector)
HXLINE( 215)		 std::vector<CppAny> arr = std::vector<CppAny>();
HXLINE( 216)		::Array< ::Dynamic> items = this->getArray();
HXLINE( 217)		{
HXLINE( 217)			int _g = 0;
HXDLIN( 217)			while((_g < items->length)){
HXLINE( 217)				 ::maglev::CppAny item = items->__get(_g).StaticCast<  ::maglev::CppAny >();
HXDLIN( 217)				_g = (_g + 1);
HXLINE( 218)				arr.push_back(item);
            			}
            		}
HXLINE( 220)		return arr;
            	}


bool CppAny_obj::isArray(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_225_isArray)
HXDLIN( 225)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 226)			this->getArray();
HXLINE( 227)			return true;
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE(   1)				{
HXLINE(   1)					null();
            				}
HXLINE( 225)				if (::Std_obj::isOfType(::haxe::Exception_obj::caught(_g)->unwrap(),::hx::ClassOf< ::String >())) {
HXLINE( 229)					return false;
            				}
            				else {
HXDLIN( 225)					HX_STACK_DO_THROW(_g);
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 225)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,isArray,return )

void CppAny_obj::setMap( ::haxe::ds::StringMap data){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_237_setMap)
HXDLIN( 237)		this->data = data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(CppAny_obj,setMap,(void))

 ::haxe::ds::StringMap CppAny_obj::getMap(){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_241_getMap)
HXLINE( 242)		 ::haxe::ds::StringMap data = ( ( ::haxe::ds::StringMap)(this->data) );
HXLINE( 243)		return data;
            	}


HX_DEFINE_DYNAMIC_FUNC0(CppAny_obj,getMap,return )

 ::maglev::CppAny CppAny_obj::getMapValue( hx::StdString key){
            	HX_STACKFRAME(&_hx_pos_dad498497c3f302d_250_getMapValue)
HXLINE( 251)		 ::haxe::ds::StringMap map = this->getMap();
HXLINE( 252)		::String strKey = ::hx::TCast< ::String >::cast(key);
HXLINE( 253)		return ( ( ::maglev::CppAny)(map->get(strKey)) );
            	}


 std::vector<CppAny> CppAny_obj::getMapKeys(){
            	HX_GC_STACKFRAME(&_hx_pos_dad498497c3f302d_260_getMapKeys)
HXLINE( 261)		 std::vector<CppAny> arr = std::vector<CppAny>();
HXLINE( 262)		 ::haxe::ds::StringMap map = this->getMap();
HXLINE( 263)		{
HXLINE( 263)			 ::Dynamic key = map->keys();
HXDLIN( 263)			while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 263)				::String key1 = ( (::String)(key->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 264)				 ::maglev::CppAny a =  ::maglev::CppAny_obj::__alloc( HX_CTX );
HXLINE( 265)				a->setString(key1);
HXLINE( 266)				arr.push_back(a);
            			}
            		}
HXLINE( 268)		return arr;
            	}



::hx::ObjectPtr< CppAny_obj > CppAny_obj::__new() {
	::hx::ObjectPtr< CppAny_obj > __this = new CppAny_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< CppAny_obj > CppAny_obj::__alloc(::hx::Ctx *_hx_ctx) {
	CppAny_obj *__this = (CppAny_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CppAny_obj), true, "maglev.CppAny"));
	*(void **)__this = CppAny_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

CppAny_obj::CppAny_obj()
{
}

void CppAny_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CppAny);
	HX_MARK_MEMBER_NAME(data,"data");
	HX_MARK_END_CLASS();
}

void CppAny_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(data,"data");
}

::hx::Val CppAny_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { return ::hx::Val( data ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"isNull") ) { return ::hx::Val( isNull_dyn() ); }
		if (HX_FIELD_EQ(inName,"isBool") ) { return ::hx::Val( isBool_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMap") ) { return ::hx::Val( setMap_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMap") ) { return ::hx::Val( getMap_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getData") ) { return ::hx::Val( getData_dyn() ); }
		if (HX_FIELD_EQ(inName,"setData") ) { return ::hx::Val( setData_dyn() ); }
		if (HX_FIELD_EQ(inName,"setNull") ) { return ::hx::Val( setNull_dyn() ); }
		if (HX_FIELD_EQ(inName,"setBool") ) { return ::hx::Val( setBool_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBool") ) { return ::hx::Val( getBool_dyn() ); }
		if (HX_FIELD_EQ(inName,"isArray") ) { return ::hx::Val( isArray_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setFloat") ) { return ::hx::Val( setFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"getFloat") ) { return ::hx::Val( getFloat_dyn() ); }
		if (HX_FIELD_EQ(inName,"isString") ) { return ::hx::Val( isString_dyn() ); }
		if (HX_FIELD_EQ(inName,"getArray") ) { return ::hx::Val( getArray_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"setDouble") ) { return ::hx::Val( setDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"getDouble") ) { return ::hx::Val( getDouble_dyn() ); }
		if (HX_FIELD_EQ(inName,"isNumeric") ) { return ::hx::Val( isNumeric_dyn() ); }
		if (HX_FIELD_EQ(inName,"setString") ) { return ::hx::Val( setString_dyn() ); }
		if (HX_FIELD_EQ(inName,"getString") ) { return ::hx::Val( getString_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeArray") ) { return ::hx::Val( makeArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushArray") ) { return ::hx::Val( pushArray_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val CppAny_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"data") ) { data=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void CppAny_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("data",2a,56,63,42));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo CppAny_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(CppAny_obj,data),HX_("data",2a,56,63,42)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *CppAny_obj_sStaticStorageInfo = 0;
#endif

static ::String CppAny_obj_sMemberFields[] = {
	HX_("data",2a,56,63,42),
	HX_("getData",e0,05,e6,14),
	HX_("setData",ec,96,e7,07),
	HX_("setNull",49,df,92,0e),
	HX_("isNull",91,63,75,66),
	HX_("setDouble",53,a0,72,92),
	HX_("setFloat",9a,2e,cb,10),
	HX_("getDouble",47,b4,21,af),
	HX_("getFloat",26,d5,6d,62),
	HX_("isNumeric",03,60,bf,af),
	HX_("setBool",ec,c4,9f,06),
	HX_("getBool",e0,33,9e,13),
	HX_("isBool",34,49,82,5e),
	HX_("setString",13,9e,d7,70),
	HX_("getString",07,b2,86,8d),
	HX_("isString",5b,c4,99,69),
	HX_("makeArray",cb,e4,27,f9),
	HX_("pushArray",5f,d5,aa,69),
	HX_("getArray",23,7d,66,85),
	HX_("isArray",4f,11,15,c2),
	HX_("setMap",1a,98,6a,6f),
	HX_("getMap",a6,43,22,a3),
	::String(null()) };

::hx::Class CppAny_obj::__mClass;

void CppAny_obj::__register()
{
	CppAny_obj _hx_dummy;
	CppAny_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("maglev.CppAny",6d,ce,c3,35);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CppAny_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CppAny_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CppAny_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CppAny_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace maglev
