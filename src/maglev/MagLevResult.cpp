// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_maglev_MagLevAny
#include <maglev/MagLevAny.h>
#endif
#ifndef INCLUDED_maglev_MagLevError
#include <maglev/MagLevError.h>
#endif
#ifndef INCLUDED_maglev_MagLevNull
#include <maglev/MagLevNull.h>
#endif
#ifndef INCLUDED_maglev_MagLevResult
#include <maglev/MagLevResult.h>
#endif
#ifndef INCLUDED_maglev_MagLevString
#include <maglev/MagLevString.h>
#endif
#ifndef INCLUDED_maglev__MagLev_MagLevType_Impl_
#include <maglev/_MagLev/MagLevType_Impl_.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_602e708537b55410_132_new,"maglev.MagLevResult","new",0xfe52d1dd,"maglev.MagLevResult.new","maglev/MagLev.hx",132,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_138_isError,"maglev.MagLevResult","isError",0xd8d9737b,"maglev.MagLevResult.isError","maglev/MagLev.hx",138,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_141_getResult,"maglev.MagLevResult","getResult",0x6f8baf50,"maglev.MagLevResult.getResult","maglev/MagLev.hx",141,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_143_setResult,"maglev.MagLevResult","setResult",0x52dc9b5c,"maglev.MagLevResult.setResult","maglev/MagLev.hx",143,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_148_getError,"maglev.MagLevResult","getError",0x0e9a54b5,"maglev.MagLevResult.getError","maglev/MagLev.hx",148,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_150_setError,"maglev.MagLevResult","setError",0xbcf7ae29,"maglev.MagLevResult.setError","maglev/MagLev.hx",150,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_155_getType,"maglev.MagLevResult","getType",0xe8b5a66d,"maglev.MagLevResult.getType","maglev/MagLev.hx",155,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_159_isEqual,"maglev.MagLevResult","isEqual",0xd8327767,"maglev.MagLevResult.isEqual","maglev/MagLev.hx",159,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_171_toJson,"maglev.MagLevResult","toJson",0x0358f7e6,"maglev.MagLevResult.toJson","maglev/MagLev.hx",171,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_122_fromResult,"maglev.MagLevResult","fromResult",0xbbbd460a,"maglev.MagLevResult.fromResult","maglev/MagLev.hx",122,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_602e708537b55410_127_fromError,"maglev.MagLevResult","fromError",0x1263733b,"maglev.MagLevResult.fromError","maglev/MagLev.hx",127,0x5b19476f)
namespace maglev{

void MagLevResult_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_602e708537b55410_132_new)
HXLINE( 134)		this->result =  ::maglev::MagLevNull_obj::__alloc( HX_CTX );
HXLINE( 135)		this->error = null();
            	}

Dynamic MagLevResult_obj::__CreateEmpty() { return new MagLevResult_obj; }

void *MagLevResult_obj::_hx_vtable = 0;

Dynamic MagLevResult_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MagLevResult_obj > _hx_result = new MagLevResult_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MagLevResult_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x01e076c5;
}

bool MagLevResult_obj::isError(){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_138_isError)
HXDLIN( 138)		return ::hx::IsNull( this->result );
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevResult_obj,isError,return )

 ::maglev::MagLevAny MagLevResult_obj::getResult(){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_141_getResult)
HXDLIN( 141)		return this->result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevResult_obj,getResult,return )

void MagLevResult_obj::setResult( ::maglev::MagLevAny res){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_143_setResult)
HXLINE( 144)		this->result = res;
HXLINE( 145)		this->error = null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(MagLevResult_obj,setResult,(void))

 ::maglev::MagLevError MagLevResult_obj::getError(){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_148_getError)
HXDLIN( 148)		return this->error;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevResult_obj,getError,return )

void MagLevResult_obj::setError( ::maglev::MagLevError err){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_150_setError)
HXLINE( 151)		this->result = null();
HXLINE( 152)		this->error = err;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MagLevResult_obj,setError,(void))

int MagLevResult_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_155_getType)
HXDLIN( 155)		return ::maglev::_MagLev::MagLevType_Impl__obj::MagLevType_Result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevResult_obj,getType,return )

bool MagLevResult_obj::isEqual( ::maglev::MagLevResult other){
            	HX_STACKFRAME(&_hx_pos_602e708537b55410_159_isEqual)
HXDLIN( 159)		bool _hx_tmp = this->isError();
HXDLIN( 159)		if ((_hx_tmp == other->isError())) {
HXLINE( 161)			if (this->isError()) {
HXLINE( 162)				 ::maglev::MagLevError _hx_tmp = this->getError();
HXDLIN( 162)				return _hx_tmp->isEqual(other->getError());
            			}
            			else {
HXLINE( 164)				 ::maglev::MagLevAny _hx_tmp = this->getResult();
HXDLIN( 164)				return _hx_tmp->isEqual(other->getResult());
            			}
            		}
            		else {
HXLINE( 168)			return false;
            		}
HXLINE( 159)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MagLevResult_obj,isEqual,return )

 ::maglev::MagLevString MagLevResult_obj::toJson(){
            	HX_GC_STACKFRAME(&_hx_pos_602e708537b55410_171_toJson)
HXLINE( 172)		::String res = HX_("null",87,9e,0e,49);
HXLINE( 173)		::String err = HX_("null",87,9e,0e,49);
HXLINE( 174)		if (this->isError()) {
HXLINE( 175)			err = this->error->toJson()->getString();
            		}
            		else {
HXLINE( 177)			res = this->result->toJson()->getString();
            		}
HXLINE( 179)		return  ::maglev::MagLevString_obj::__alloc( HX_CTX ,((((HX_("{\"result\": ",64,32,1c,e7) + res) + HX_(", \"error\": ",ae,1d,ad,12)) + err) + HX_("}",7d,00,00,00)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevResult_obj,toJson,return )

 ::maglev::MagLevResult MagLevResult_obj::fromResult( ::maglev::MagLevAny res){
            	HX_GC_STACKFRAME(&_hx_pos_602e708537b55410_122_fromResult)
HXLINE( 123)		 ::maglev::MagLevResult result =  ::maglev::MagLevResult_obj::__alloc( HX_CTX );
HXLINE( 124)		result->setResult(res);
HXLINE( 125)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MagLevResult_obj,fromResult,return )

 ::maglev::MagLevResult MagLevResult_obj::fromError( ::maglev::MagLevError err){
            	HX_GC_STACKFRAME(&_hx_pos_602e708537b55410_127_fromError)
HXLINE( 128)		 ::maglev::MagLevResult result =  ::maglev::MagLevResult_obj::__alloc( HX_CTX );
HXLINE( 129)		result->setError(err);
HXLINE( 130)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MagLevResult_obj,fromError,return )


::hx::ObjectPtr< MagLevResult_obj > MagLevResult_obj::__new() {
	::hx::ObjectPtr< MagLevResult_obj > __this = new MagLevResult_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< MagLevResult_obj > MagLevResult_obj::__alloc(::hx::Ctx *_hx_ctx) {
	MagLevResult_obj *__this = (MagLevResult_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MagLevResult_obj), true, "maglev.MagLevResult"));
	*(void **)__this = MagLevResult_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MagLevResult_obj::MagLevResult_obj()
{
}

void MagLevResult_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MagLevResult);
	HX_MARK_MEMBER_NAME(result,"result");
	HX_MARK_MEMBER_NAME(error,"error");
	HX_MARK_END_CLASS();
}

void MagLevResult_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(result,"result");
	HX_VISIT_MEMBER_NAME(error,"error");
}

::hx::Val MagLevResult_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"error") ) { return ::hx::Val( error ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"result") ) { return ::hx::Val( result ); }
		if (HX_FIELD_EQ(inName,"toJson") ) { return ::hx::Val( toJson_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"isError") ) { return ::hx::Val( isError_dyn() ); }
		if (HX_FIELD_EQ(inName,"getType") ) { return ::hx::Val( getType_dyn() ); }
		if (HX_FIELD_EQ(inName,"isEqual") ) { return ::hx::Val( isEqual_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getError") ) { return ::hx::Val( getError_dyn() ); }
		if (HX_FIELD_EQ(inName,"setError") ) { return ::hx::Val( setError_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getResult") ) { return ::hx::Val( getResult_dyn() ); }
		if (HX_FIELD_EQ(inName,"setResult") ) { return ::hx::Val( setResult_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MagLevResult_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"fromError") ) { outValue = fromError_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromResult") ) { outValue = fromResult_dyn(); return true; }
	}
	return false;
}

::hx::Val MagLevResult_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"error") ) { error=inValue.Cast<  ::maglev::MagLevError >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"result") ) { result=inValue.Cast<  ::maglev::MagLevAny >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MagLevResult_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("result",dd,68,84,08));
	outFields->push(HX_("error",c8,cb,29,73));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MagLevResult_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::maglev::MagLevAny */ ,(int)offsetof(MagLevResult_obj,result),HX_("result",dd,68,84,08)},
	{::hx::fsObject /*  ::maglev::MagLevError */ ,(int)offsetof(MagLevResult_obj,error),HX_("error",c8,cb,29,73)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MagLevResult_obj_sStaticStorageInfo = 0;
#endif

static ::String MagLevResult_obj_sMemberFields[] = {
	HX_("result",dd,68,84,08),
	HX_("error",c8,cb,29,73),
	HX_("isError",7e,6f,af,0f),
	HX_("getResult",13,f2,da,84),
	HX_("setResult",1f,de,2b,68),
	HX_("getError",52,db,00,d3),
	HX_("setError",c6,34,5e,81),
	HX_("getType",70,a2,8b,1f),
	HX_("isEqual",6a,73,08,0f),
	HX_("toJson",43,ad,21,7c),
	::String(null()) };

::hx::Class MagLevResult_obj::__mClass;

static ::String MagLevResult_obj_sStaticFields[] = {
	HX_("fromResult",e7,6d,c8,4b),
	HX_("fromError",fe,b5,b2,27),
	::String(null())
};

void MagLevResult_obj::__register()
{
	MagLevResult_obj _hx_dummy;
	MagLevResult_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("maglev.MagLevResult",6b,9f,fb,73);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MagLevResult_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(MagLevResult_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MagLevResult_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MagLevResult_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MagLevResult_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MagLevResult_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace maglev
