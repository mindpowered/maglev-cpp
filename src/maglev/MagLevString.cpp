// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_maglev_MagLevAny
#include <maglev/MagLevAny.h>
#endif
#ifndef INCLUDED_maglev_MagLevString
#include <maglev/MagLevString.h>
#endif
#ifndef INCLUDED_maglev_MagLevType
#include <maglev/MagLevType.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ff804d1c46fc64c0_417_new,"maglev.MagLevString","new",0x3f0f9bd1,"maglev.MagLevString.new","maglev/MagLevTypes.hx",417,0x03b0b9b4)
HX_LOCAL_STACK_FRAME(_hx_pos_ff804d1c46fc64c0_422_getString,"maglev.MagLevString","getString",0xeaa62838,"maglev.MagLevString.getString","maglev/MagLevTypes.hx",422,0x03b0b9b4)
HX_LOCAL_STACK_FRAME(_hx_pos_ff804d1c46fc64c0_425_getType,"maglev.MagLevString","getType",0x3fd07a61,"maglev.MagLevString.getType","maglev/MagLevTypes.hx",425,0x03b0b9b4)
HX_LOCAL_STACK_FRAME(_hx_pos_ff804d1c46fc64c0_428_isEqual,"maglev.MagLevString","isEqual",0x2f4d4b5b,"maglev.MagLevString.isEqual","maglev/MagLevTypes.hx",428,0x03b0b9b4)
HX_LOCAL_STACK_FRAME(_hx_pos_ff804d1c46fc64c0_437_toJson,"maglev.MagLevString","toJson",0x5d47de72,"maglev.MagLevString.toJson","maglev/MagLevTypes.hx",437,0x03b0b9b4)
HX_LOCAL_STACK_FRAME(_hx_pos_ff804d1c46fc64c0_415_fromString,"maglev.MagLevString","fromString",0x72dc228a,"maglev.MagLevString.fromString","maglev/MagLevTypes.hx",415,0x03b0b9b4)
namespace maglev{

void MagLevString_obj::__construct(::String value){
            	HX_STACKFRAME(&_hx_pos_ff804d1c46fc64c0_417_new)
HXLINE( 418)		this->value = value;
HXLINE( 419)		super::__construct();
            	}

Dynamic MagLevString_obj::__CreateEmpty() { return new MagLevString_obj; }

void *MagLevString_obj::_hx_vtable = 0;

Dynamic MagLevString_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MagLevString_obj > _hx_result = new MagLevString_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MagLevString_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0a8c36b9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0a8c36b9;
	} else {
		return inClassId==(int)0x7fdb9bc4;
	}
}

::String MagLevString_obj::getString(){
            	HX_STACKFRAME(&_hx_pos_ff804d1c46fc64c0_422_getString)
HXDLIN( 422)		return this->value;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevString_obj,getString,return )

 ::maglev::MagLevType MagLevString_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_ff804d1c46fc64c0_425_getType)
HXDLIN( 425)		return ::maglev::MagLevType_obj::MagLevType_String_dyn();
            	}


bool MagLevString_obj::isEqual( ::maglev::MagLevAny other){
            	HX_STACKFRAME(&_hx_pos_ff804d1c46fc64c0_428_isEqual)
HXDLIN( 428)		 ::maglev::MagLevType _hx_tmp = other->getType();
HXDLIN( 428)		if (::hx::IsEq( _hx_tmp,this->getType() )) {
HXLINE( 429)			 ::maglev::MagLevString o = ::hx::TCast<  ::maglev::MagLevString >::cast(other);
HXLINE( 430)			::String _hx_tmp = this->getString();
HXDLIN( 430)			return (_hx_tmp == o->getString());
            		}
            		else {
HXLINE( 433)			return false;
            		}
HXLINE( 428)		return false;
            	}


 ::maglev::MagLevString MagLevString_obj::toJson(){
            	HX_GC_STACKFRAME(&_hx_pos_ff804d1c46fc64c0_437_toJson)
HXDLIN( 437)		return  ::maglev::MagLevString_obj::__alloc( HX_CTX ,((HX_("\"",22,00,00,00) + this->value) + HX_("\"",22,00,00,00)));
            	}


 ::maglev::MagLevString MagLevString_obj::fromString(::String value){
            	HX_GC_STACKFRAME(&_hx_pos_ff804d1c46fc64c0_415_fromString)
HXDLIN( 415)		return  ::maglev::MagLevString_obj::__alloc( HX_CTX ,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MagLevString_obj,fromString,return )


::hx::ObjectPtr< MagLevString_obj > MagLevString_obj::__new(::String value) {
	::hx::ObjectPtr< MagLevString_obj > __this = new MagLevString_obj();
	__this->__construct(value);
	return __this;
}

::hx::ObjectPtr< MagLevString_obj > MagLevString_obj::__alloc(::hx::Ctx *_hx_ctx,::String value) {
	MagLevString_obj *__this = (MagLevString_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MagLevString_obj), true, "maglev.MagLevString"));
	*(void **)__this = MagLevString_obj::_hx_vtable;
	__this->__construct(value);
	return __this;
}

MagLevString_obj::MagLevString_obj()
{
}

void MagLevString_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MagLevString);
	HX_MARK_MEMBER_NAME(value,"value");
	HX_MARK_END_CLASS();
}

void MagLevString_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(value,"value");
}

::hx::Val MagLevString_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return ::hx::Val( value ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toJson") ) { return ::hx::Val( toJson_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getType") ) { return ::hx::Val( getType_dyn() ); }
		if (HX_FIELD_EQ(inName,"isEqual") ) { return ::hx::Val( isEqual_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getString") ) { return ::hx::Val( getString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MagLevString_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

::hx::Val MagLevString_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MagLevString_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("value",71,7f,b8,31));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MagLevString_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(MagLevString_obj,value),HX_("value",71,7f,b8,31)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MagLevString_obj_sStaticStorageInfo = 0;
#endif

static ::String MagLevString_obj_sMemberFields[] = {
	HX_("value",71,7f,b8,31),
	HX_("getString",07,b2,86,8d),
	HX_("getType",70,a2,8b,1f),
	HX_("isEqual",6a,73,08,0f),
	HX_("toJson",43,ad,21,7c),
	::String(null()) };

::hx::Class MagLevString_obj::__mClass;

static ::String MagLevString_obj_sStaticFields[] = {
	HX_("fromString",db,2d,74,54),
	::String(null())
};

void MagLevString_obj::__register()
{
	MagLevString_obj _hx_dummy;
	MagLevString_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("maglev.MagLevString",5f,5f,a7,7c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MagLevString_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(MagLevString_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MagLevString_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MagLevString_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MagLevString_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MagLevString_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace maglev
