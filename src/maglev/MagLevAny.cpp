// Generated by Haxe 4.1.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_maglev_MagLevAny
#include <maglev/MagLevAny.h>
#endif
#ifndef INCLUDED_maglev_MagLevString
#include <maglev/MagLevString.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_02f376b4f7968b18_310_new,"maglev.MagLevAny","new",0x23f40790,"maglev.MagLevAny.new","maglev/MagLev.hx",310,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_02f376b4f7968b18_312_toJson,"maglev.MagLevAny","toJson",0xd6f81413,"maglev.MagLevAny.toJson","maglev/MagLev.hx",312,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_02f376b4f7968b18_315_getType,"maglev.MagLevAny","getType",0x404f31a0,"maglev.MagLevAny.getType","maglev/MagLev.hx",315,0x5b19476f)
HX_LOCAL_STACK_FRAME(_hx_pos_02f376b4f7968b18_318_isEqual,"maglev.MagLevAny","isEqual",0x2fcc029a,"maglev.MagLevAny.isEqual","maglev/MagLev.hx",318,0x5b19476f)
namespace maglev{

void MagLevAny_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_02f376b4f7968b18_310_new)
            	}

Dynamic MagLevAny_obj::__CreateEmpty() { return new MagLevAny_obj; }

void *MagLevAny_obj::_hx_vtable = 0;

Dynamic MagLevAny_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MagLevAny_obj > _hx_result = new MagLevAny_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MagLevAny_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fdb9bc4;
}

 ::maglev::MagLevString MagLevAny_obj::toJson(){
            	HX_STACKFRAME(&_hx_pos_02f376b4f7968b18_312_toJson)
HXDLIN( 312)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("toJson does not exist for MagLevAny",eb,7d,66,1e)));
HXDLIN( 312)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevAny_obj,toJson,return )

int MagLevAny_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_02f376b4f7968b18_315_getType)
HXDLIN( 315)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("getType does not exist for MagLevAny",9e,e6,de,74)));
HXDLIN( 315)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MagLevAny_obj,getType,return )

bool MagLevAny_obj::isEqual( ::maglev::MagLevAny o){
            	HX_STACKFRAME(&_hx_pos_02f376b4f7968b18_318_isEqual)
HXDLIN( 318)		HX_STACK_DO_THROW(::haxe::Exception_obj::thrown(HX_("isEqual does not exist for MagLevAny",64,ed,cb,b5)));
HXDLIN( 318)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MagLevAny_obj,isEqual,return )


::hx::ObjectPtr< MagLevAny_obj > MagLevAny_obj::__new() {
	::hx::ObjectPtr< MagLevAny_obj > __this = new MagLevAny_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< MagLevAny_obj > MagLevAny_obj::__alloc(::hx::Ctx *_hx_ctx) {
	MagLevAny_obj *__this = (MagLevAny_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MagLevAny_obj), false, "maglev.MagLevAny"));
	*(void **)__this = MagLevAny_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MagLevAny_obj::MagLevAny_obj()
{
}

::hx::Val MagLevAny_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"toJson") ) { return ::hx::Val( toJson_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getType") ) { return ::hx::Val( getType_dyn() ); }
		if (HX_FIELD_EQ(inName,"isEqual") ) { return ::hx::Val( isEqual_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MagLevAny_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *MagLevAny_obj_sStaticStorageInfo = 0;
#endif

static ::String MagLevAny_obj_sMemberFields[] = {
	HX_("toJson",43,ad,21,7c),
	HX_("getType",70,a2,8b,1f),
	HX_("isEqual",6a,73,08,0f),
	::String(null()) };

::hx::Class MagLevAny_obj::__mClass;

void MagLevAny_obj::__register()
{
	MagLevAny_obj _hx_dummy;
	MagLevAny_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("maglev.MagLevAny",9e,3f,dd,9a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MagLevAny_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MagLevAny_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MagLevAny_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MagLevAny_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace maglev
